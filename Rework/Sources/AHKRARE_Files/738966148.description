gets the position, size, and offset of a window

/*								Function: WinGetPosEx
	;
	; Description:
	;
	;   Gets the position, size, and offset of a window. See the *Remarks* section
	;   for more information.
	;
	; Parameters:
	;
	;   hWindow - Handle to the window.
	;
	;   X, Y, Width, Height - Output variables. [Optional] If defined, these
	;       variables contain the coordinates of the window relative to the
	;       upper-left corner of the screen (X and Y), and the Width and Height of
	;       the window.
	;
	;   Offset_X, Offset_Y - Output variables. [Optional] Offset, in pixels, of the
	;       actual position of the window versus the position of the window as
	;       reported by GetWindowRect.  If moving the window to specific
	;       coordinates, add these offset values to the appropriate coordinate
	;       (X and/or Y) to reflect the true size of the window.
	;
	; Returns:
	;
	;   If successful, the address of a RECTPlus structure is returned.  The first
	;   16 bytes contains a RECT structure that contains the dimensions of the
	;   bounding rectangle of the specified window.  The dimensions are given in
	;   screen coordinates that are relative to the upper-left corner of the screen.
	;   The next 8 bytes contain the X and Y offsets (4-byte integer for X and
	;   4-byte integer for Y).
	;
	;   Also if successful (and if defined), the output variables (X, Y, Width,
	;   Height, Offset_X, and Offset_Y) are updated.  See the *Parameters* section
	;   for more more information.
	;
	;   If not successful, FALSE is returned.
	;
	; Requirement:
	;
	;   Windows 2000+
	;
	; Remarks, Observations, and Changes:
	;
	; * Starting with Windows Vista, Microsoft includes the Desktop Window Manager
	;   (DWM) along with Aero-based themes that use DWM.  Aero themes provide new
	;   features like a translucent glass design with subtle window animations.
	;   Unfortunately, the DWM doesn't always conform to the OS rules for size and
	;   positioning of windows.  If using an Aero theme, many of the windows are
	;   actually larger than reported by Windows when using standard commands (Ex:
	;   WinGetPos, GetWindowRect, etc.) and because of that, are not positioned
	;   correctly when using standard commands (Ex: gui Show, WinMove, etc.).  This
	;   function was created to 1) identify the true position and size of all
	;   windows regardless of the window attributes, desktop theme, or version of
	;   Windows and to 2) identify the appropriate offset that is needed to position
	;   the window if the window is a different size than reported.
	;
	; * The true size, position, and offset of a window cannot be determined until
	;   the window has been rendered.  See the example script for an example of how
	;   to use this function to position a new window.
	;
	; * 20150906: The "dwmapi\DwmGetWindowAttribute" function can return odd errors
	;   if DWM is not enabled.  One error I've discovered is a return code of
	;   0x80070006 with a last error code of 6, i.e. ERROR_INVALID_HANDLE or "The
	;   handle is invalid."  To keep the function operational during this types of
	;   conditions, the function has been modified to assume that all unexpected
	;   return codes mean that DWM is not available and continue to process without
	;   it.  When DWM is a possibility (i.e. Vista+), a developer-friendly messsage
	;   will be dumped to the debugger when these errors occur.
	;
	; * 20160105 (Ben Allred): Adjust width and height for offset calculations if
	;   DPI is in play.
	;
	; Credit:
	;
	;   Idea and some code from *KaFu* (AutoIt forum)
	;
	;-------------------------------------------------------------------------------
		*/